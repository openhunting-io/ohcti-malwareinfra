from censys.search import CensysHosts
from dotenv import load_dotenv
import os
import json

load_dotenv()

output_file_path = 'listmalwareip.txt'
json_file_query = "query.json"

CENSYS_API_ID = os.getenv("CENSYS_API_ID")
CENSYS_API_SECRET = os.getenv("CENSYS_API_SECRET")

h = CensysHosts(api_id=CENSYS_API_ID, api_secret=CENSYS_API_SECRET)

with open(json_file_query, encoding='utf-8') as f:
    query_data = json.load(f)

with open(output_file_path, 'w', encoding='utf-8') as output_file:
    unique_entries = set()
    for threat in query_data.get("threats", []):
        threat_name = threat.get("name")
        search_query = threat.get("search")
        print(f"Searching for {threat_name}...")
        for pages in h.search(search_query, pages=-1):
            for page in pages:
                entry = (threat_name, page['ip'])
                if entry not in unique_entries:
                    unique_entries.add(entry)
                    output_file.write(f"{threat_name},{page['ip']}\n")
                    print(f"{threat_name} found at IP: {page['ip']}")

with open(output_file_path, 'r', encoding='utf-8') as file:
    lines = file.readlines()

unique_entries = {}

for line in lines:
    threat_name, ip = line.strip().split(',')
    unique_entries[(threat_name, ip)] = line

sorted_lines = sorted(unique_entries.values())

with open(output_file_path, 'w', encoding='utf-8') as file:
    file.writelines(sorted_lines)

print(f"Results saved to '{output_file_path}'.")